# Generated by Django 4.2.7 on 2025-07-19 16:40

from django.conf import settings
import django.contrib.gis.db.models.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('campaigns', '0001_initial'),
        ('fleets', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Rider',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rider_id', models.CharField(max_length=20, unique=True)),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('emergency_contact_name', models.CharField(max_length=100)),
                ('emergency_contact_phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('nin', models.CharField(blank=True, max_length=11)),
                ('drivers_license', models.CharField(blank=True, max_length=20)),
                ('passport_photo', models.ImageField(upload_to='riders/photos/')),
                ('id_document', models.ImageField(upload_to='riders/documents/')),
                ('tricycle_registration', models.CharField(max_length=20)),
                ('tricycle_model', models.CharField(blank=True, max_length=100)),
                ('tricycle_year', models.PositiveIntegerField(blank=True, null=True)),
                ('tricycle_color', models.CharField(blank=True, max_length=50)),
                ('tricycle_photos', models.JSONField(default=list)),
                ('status', models.CharField(choices=[('pending', 'Pending Verification'), ('active', 'Active'), ('inactive', 'Inactive'), ('suspended', 'Suspended'), ('banned', 'Banned')], default='pending', max_length=20)),
                ('verification_status', models.CharField(choices=[('unverified', 'Unverified'), ('pending', 'Pending'), ('verified', 'Verified'), ('rejected', 'Rejected')], default='unverified', max_length=20)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('rating', models.DecimalField(decimal_places=2, default=5.0, max_digits=3, validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(5.0)])),
                ('compliance_score', models.DecimalField(decimal_places=2, default=100.0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('total_campaigns', models.PositiveIntegerField(default=0)),
                ('total_earnings', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('pending_earnings', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('reliability_score', models.FloatField(default=100.0)),
                ('route_efficiency_score', models.FloatField(default=0.0)),
                ('verification_compliance_score', models.FloatField(default=100.0)),
                ('suspicious_activity_count', models.IntegerField(default=0)),
                ('last_verification_request', models.DateTimeField(blank=True, null=True)),
                ('is_available', models.BooleanField(default=True)),
                ('preferred_work_hours', models.JSONField(default=dict)),
                ('max_concurrent_campaigns', models.PositiveIntegerField(default=1)),
                ('bank_name', models.CharField(blank=True, max_length=100)),
                ('account_number', models.CharField(blank=True, max_length=20)),
                ('account_name', models.CharField(blank=True, max_length=100)),
                ('bvn', models.CharField(blank=True, max_length=11)),
                ('current_location', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('usual_routes', django.contrib.gis.db.models.fields.MultiLineStringField(blank=True, null=True, srid=4326)),
                ('operating_areas', models.JSONField(default=list)),
                ('fleet_owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='riders', to='fleets.fleetowner')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='rider_profile', to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_riders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RiderDevice',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('device_id', models.CharField(max_length=255, unique=True)),
                ('device_name', models.CharField(max_length=100)),
                ('platform', models.CharField(choices=[('android', 'Android'), ('ios', 'iOS')], max_length=20)),
                ('os_version', models.CharField(max_length=50)),
                ('app_version', models.CharField(max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('fcm_token', models.TextField(blank=True)),
                ('notifications_enabled', models.BooleanField(default=True)),
                ('location_sharing_enabled', models.BooleanField(default=True)),
                ('preferred_language', models.CharField(default='en', max_length=10)),
                ('rider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices', to='riders.rider')),
            ],
            options={
                'ordering': ['-last_login'],
            },
        ),
        migrations.CreateModel(
            name='RiderPerformance',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('period_type', models.CharField(choices=[('weekly', 'Weekly'), ('monthly', 'Monthly')], max_length=10)),
                ('campaigns_completed', models.PositiveIntegerField(default=0)),
                ('total_verifications', models.PositiveIntegerField(default=0)),
                ('successful_verifications', models.PositiveIntegerField(default=0)),
                ('verification_success_rate', models.DecimalField(decimal_places=2, default=100.0, max_digits=5)),
                ('total_distance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('unique_areas_visited', models.PositiveIntegerField(default=0)),
                ('average_daily_distance', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('total_earnings', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('bonus_earnings', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('compliance_score', models.DecimalField(decimal_places=2, default=100.0, max_digits=5)),
                ('violations', models.PositiveIntegerField(default=0)),
                ('rider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_history', to='riders.rider')),
            ],
            options={
                'ordering': ['-period_end'],
                'unique_together': {('rider', 'period_start', 'period_type')},
            },
        ),
        migrations.CreateModel(
            name='RiderPayment',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('payment_type', models.CharField(choices=[('campaign', 'Campaign Payment'), ('bonus', 'Performance Bonus'), ('referral', 'Referral Bonus'), ('correction', 'Payment Correction')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='NGN', max_length=3)),
                ('reference', models.CharField(max_length=100, unique=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('payment_method', models.CharField(blank=True, max_length=50)),
                ('external_reference', models.CharField(blank=True, max_length=100)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('failure_reason', models.TextField(blank=True)),
                ('retry_count', models.PositiveIntegerField(default=0)),
                ('campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='campaigns.campaign')),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('rider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='riders.rider')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['rider', 'status'], name='riders_ride_rider_i_45df2d_idx'), models.Index(fields=['reference'], name='riders_ride_referen_48d6e8_idx'), models.Index(fields=['status', 'created_at'], name='riders_ride_status_066540_idx')],
            },
        ),
        migrations.CreateModel(
            name='RiderLocation',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('location', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('accuracy', models.FloatField()),
                ('speed', models.FloatField(blank=True, null=True)),
                ('heading', models.FloatField(blank=True, null=True)),
                ('altitude', models.FloatField(blank=True, null=True)),
                ('timestamp', models.DateTimeField()),
                ('is_working', models.BooleanField(default=True)),
                ('current_campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='campaigns.campaign')),
                ('rider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='location_history', to='riders.rider')),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['rider', 'timestamp'], name='riders_ride_rider_i_ca8ab9_idx'), models.Index(fields=['timestamp'], name='riders_ride_timesta_c1fde2_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='rider',
            index=models.Index(fields=['status', 'verification_status'], name='riders_ride_status_6df8ca_idx'),
        ),
        migrations.AddIndex(
            model_name='rider',
            index=models.Index(fields=['fleet_owner', 'status'], name='riders_ride_fleet_o_82987e_idx'),
        ),
        migrations.AddIndex(
            model_name='rider',
            index=models.Index(fields=['rider_id'], name='riders_ride_rider_i_ef4c9d_idx'),
        ),
    ]
