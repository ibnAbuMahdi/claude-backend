# Generated by Django 4.2.7 on 2025-07-24 20:05

import django.contrib.gis.db.models.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('riders', '0001_initial'),
        ('campaigns', '0002_initial'),
    ]

    operations = [
        migrations.AlterField(
            model_name='campaign',
            name='agency_rate',
            field=models.DecimalField(decimal_places=2, help_text='Average agency rate', max_digits=10),
        ),
        migrations.AlterField(
            model_name='campaign',
            name='platform_rate',
            field=models.DecimalField(decimal_places=2, help_text='Average rate across geofences', max_digits=10),
        ),
        migrations.AlterField(
            model_name='campaign',
            name='required_riders',
            field=models.PositiveIntegerField(help_text='Total required riders across all geofences'),
        ),
        migrations.AlterField(
            model_name='campaign',
            name='spent',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Total spent across all geofences', max_digits=10),
        ),
        migrations.AlterField(
            model_name='campaign',
            name='total_budget',
            field=models.DecimalField(decimal_places=2, help_text='Sum of all geofence budgets', max_digits=10),
        ),
        migrations.CreateModel(
            name='CampaignGeofence',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Name of this geofence area', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Description of this specific area')),
                ('priority', models.PositiveIntegerField(default=1, help_text='Priority order for rider assignment')),
                ('geofence_data', django.contrib.gis.db.models.fields.PolygonField(help_text='Actual geofence polygon', srid=4326)),
                ('center_latitude', models.DecimalField(decimal_places=7, max_digits=10)),
                ('center_longitude', models.DecimalField(decimal_places=7, max_digits=10)),
                ('radius_meters', models.PositiveIntegerField(help_text='Radius in meters for circular geofences')),
                ('budget', models.DecimalField(decimal_places=2, help_text='Budget allocated specifically for this geofence', max_digits=10)),
                ('spent', models.DecimalField(decimal_places=2, default=0, help_text='Amount spent in this geofence', max_digits=10)),
                ('rate_type', models.CharField(choices=[('per_km', 'Per Kilometer'), ('per_hour', 'Per Hour'), ('fixed_daily', 'Fixed Daily Rate'), ('hybrid', 'Hybrid (KM + Time)')], default='per_km', max_length=20)),
                ('rate_per_km', models.DecimalField(decimal_places=2, default=0, help_text='Rate paid per kilometer in this geofence', max_digits=8)),
                ('rate_per_hour', models.DecimalField(decimal_places=2, default=0, help_text='Rate paid per hour in this geofence', max_digits=8)),
                ('fixed_daily_rate', models.DecimalField(decimal_places=2, default=0, help_text='Fixed daily rate for this geofence', max_digits=8)),
                ('start_date', models.DateTimeField(help_text='When this geofence becomes active')),
                ('end_date', models.DateTimeField(help_text='When this geofence expires')),
                ('max_riders', models.PositiveIntegerField(help_text='Maximum riders allowed in this geofence')),
                ('current_riders', models.PositiveIntegerField(default=0, help_text='Currently assigned riders')),
                ('min_riders', models.PositiveIntegerField(default=1, help_text='Minimum riders needed for this geofence')),
                ('target_coverage_hours', models.PositiveIntegerField(default=8, help_text='Target hours of coverage per day')),
                ('verification_frequency', models.PositiveIntegerField(default=3, help_text='Number of verifications required per day per rider')),
                ('status', models.CharField(choices=[('active', 'Active'), ('paused', 'Paused'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='active', max_length=20)),
                ('is_high_priority', models.BooleanField(default=False, help_text='High priority geofences get rider assignment preference')),
                ('total_distance_covered', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_verifications', models.PositiveIntegerField(default=0)),
                ('successful_verifications', models.PositiveIntegerField(default=0)),
                ('total_hours_active', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('area_type', models.CharField(blank=True, help_text='Type of area (commercial, residential, industrial, etc.)', max_length=50)),
                ('target_demographics', models.JSONField(blank=True, default=dict)),
                ('special_instructions', models.TextField(blank=True)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='geofences', to='campaigns.campaign')),
            ],
            options={
                'ordering': ['priority', 'name'],
            },
        ),
        migrations.CreateModel(
            name='CampaignGeofenceAssignment',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('assigned', 'Assigned'), ('active', 'Active'), ('paused', 'Paused'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='assigned', max_length=20)),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('distance_covered', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('hours_active', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('verifications_completed', models.PositiveIntegerField(default=0)),
                ('earnings_from_geofence', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('compliance_score', models.DecimalField(decimal_places=2, default=100.0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('last_activity', models.DateTimeField(blank=True, null=True)),
                ('campaign_geofence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rider_assignments', to='campaigns.campaigngeofence')),
                ('campaign_rider_assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='geofence_assignments', to='campaigns.campaignriderassignment')),
                ('rider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='geofence_assignments', to='riders.rider')),
            ],
            options={
                'indexes': [models.Index(fields=['campaign_geofence', 'status'], name='campaigns_c_campaig_7a6c46_idx'), models.Index(fields=['rider', 'status'], name='campaigns_c_rider_i_7c8e8b_idx'), models.Index(fields=['last_activity'], name='campaigns_c_last_ac_b829a4_idx')],
                'unique_together': {('campaign_geofence', 'rider')},
            },
        ),
        migrations.AddIndex(
            model_name='campaigngeofence',
            index=models.Index(fields=['campaign', 'status'], name='campaigns_c_campaig_0e81a8_idx'),
        ),
        migrations.AddIndex(
            model_name='campaigngeofence',
            index=models.Index(fields=['start_date', 'end_date'], name='campaigns_c_start_d_f7250f_idx'),
        ),
        migrations.AddIndex(
            model_name='campaigngeofence',
            index=models.Index(fields=['priority', 'is_high_priority'], name='campaigns_c_priorit_5e42f9_idx'),
        ),
        migrations.AddConstraint(
            model_name='campaigngeofence',
            constraint=models.CheckConstraint(check=models.Q(('max_riders__gte', models.F('min_riders'))), name='max_riders_gte_min_riders'),
        ),
        migrations.AddConstraint(
            model_name='campaigngeofence',
            constraint=models.CheckConstraint(check=models.Q(('current_riders__lte', models.F('max_riders'))), name='current_riders_lte_max_riders'),
        ),
        migrations.AddConstraint(
            model_name='campaigngeofence',
            constraint=models.CheckConstraint(check=models.Q(('budget__gt', 0)), name='budget_positive'),
        ),
    ]
