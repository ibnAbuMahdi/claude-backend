# Generated by Django 4.2.7 on 2025-07-19 16:40

from django.conf import settings
import django.contrib.gis.db.models.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('campaign_type', models.CharField(choices=[('brand_awareness', 'Brand Awareness'), ('product_launch', 'Product Launch'), ('promotional', 'Promotional'), ('event', 'Event Marketing'), ('seasonal', 'Seasonal Campaign')], max_length=20)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending_approval', 'Pending Approval'), ('approved', 'Approved'), ('active', 'Active'), ('paused', 'Paused'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('sticker_design', models.ImageField(upload_to='campaigns/stickers/')),
                ('sticker_preview', models.ImageField(blank=True, null=True, upload_to='campaigns/previews/')),
                ('brand_colors', models.JSONField(default=list)),
                ('brand_logo', models.ImageField(blank=True, null=True, upload_to='campaigns/logos/')),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('target_audience', models.TextField(blank=True)),
                ('marketing_objectives', models.TextField(blank=True)),
                ('target_areas', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
                ('target_cities', models.JSONField(default=list)),
                ('exclude_areas', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
                ('required_riders', models.PositiveIntegerField()),
                ('platform_rate', models.DecimalField(decimal_places=2, max_digits=10)),
                ('agency_rate', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_budget', models.DecimalField(decimal_places=2, max_digits=10)),
                ('spent', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('target_impressions', models.PositiveIntegerField(blank=True, null=True)),
                ('actual_impressions', models.PositiveIntegerField(default=0)),
                ('verification_frequency', models.PositiveIntegerField(default=3)),
                ('total_distance', models.FloatField(default=0)),
                ('total_verifications', models.IntegerField(default=0)),
                ('verification_pass_rate', models.FloatField(default=0)),
                ('performance_score', models.FloatField(default=0)),
                ('market_insights', models.JSONField(default=dict)),
                ('sticker_certificate', models.FileField(blank=True, null=True, upload_to='certificates/')),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True)),
                ('tags', models.JSONField(default=list)),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CampaignMetrics',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('active_riders', models.PositiveIntegerField(default=0)),
                ('total_verifications', models.PositiveIntegerField(default=0)),
                ('successful_verifications', models.PositiveIntegerField(default=0)),
                ('estimated_impressions', models.PositiveIntegerField(default=0)),
                ('distance_covered', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('areas_covered', models.JSONField(default=list)),
                ('unique_locations', models.PositiveIntegerField(default=0)),
                ('compliance_rate', models.DecimalField(decimal_places=2, default=100.0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='CampaignReport',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('report_type', models.CharField(choices=[('daily', 'Daily Report'), ('weekly', 'Weekly Report'), ('monthly', 'Monthly Report'), ('final', 'Final Report'), ('custom', 'Custom Report')], max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('title', models.CharField(max_length=255)),
                ('summary', models.TextField()),
                ('insights', models.TextField(blank=True)),
                ('recommendations', models.TextField(blank=True)),
                ('metrics_data', models.JSONField(default=dict)),
                ('charts_data', models.JSONField(default=dict)),
                ('pdf_report', models.FileField(blank=True, null=True, upload_to='reports/pdf/')),
                ('excel_report', models.FileField(blank=True, null=True, upload_to='reports/excel/')),
                ('use_agency_branding', models.BooleanField(default=True)),
                ('include_platform_branding', models.BooleanField(default=False)),
                ('is_generated', models.BooleanField(default=False)),
                ('generated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CampaignRiderAssignment',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('assigned', 'Assigned'), ('accepted', 'Accepted'), ('active', 'Active'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='assigned', max_length=20)),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('accepted_at', models.DateTimeField(blank=True, null=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('verification_count', models.PositiveIntegerField(default=0)),
                ('compliance_score', models.DecimalField(decimal_places=2, default=100.0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('distance_covered', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('amount_earned', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('paid', 'Paid'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('assigned_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rider_assignments', to=settings.AUTH_USER_MODEL)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='campaigns.campaign')),
            ],
        ),
    ]
